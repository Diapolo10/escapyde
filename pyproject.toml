[build-system]
requires = ["poetry-core>=1.2.0", "wheel",]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "escapyde"
version = "1.0.2"
description = "Yet another ANSI escape sequence library for Python - now modernised!"

packages = [
    { include = "escapyde", from = "src" },
]

authors = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]
maintainers = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]

include = ["CHANGELOG.md", "LICENSE", "py.typed",]
license = "MIT"
readme = "README.md"

homepage = "https://pypi.org/project/escapyde/"
repository = "https://github.com/Diapolo10/escapyde"
documentation = "https://github.com/Diapolo10/escapyde/tree/main/docs"

keywords = [
    "ansi",
    "console",
    "terminal",
    "escape",
    "sequence",
    "colour",
    "color",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: IronPython",
    "Programming Language :: Python :: Implementation :: Jython",
    "Programming Language :: Python :: Implementation :: MicroPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: Implementation :: Stackless",
    "Topic :: Artistic Software",
    "Topic :: Communications",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Console Fonts",
    "Topic :: Terminals",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = "^3.9.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.6.1"


[tool.poetry.group.linters]
optional = true


[tool.poetry.group.linters.dependencies]
ruff = ">=0.5.0,<0.9.0"


[tool.poetry.group.tests]
optional = true


[tool.poetry.group.tests.dependencies]
pytest = ">=7.4.3,<9.0.0"
pytest-cov = ">=4.1,<7.0"
tox = "^4.11.3"
tox-gh-actions = "^3.1.3"


[tool.poetry.urls]
"Source code" = "https://github.com/Diapolo10/escapyde"
"Tracker" = "https://github.com/Diapolo10/escapyde/issues"
"Changelog" = "https://github.com/Diapolo10/escapyde/blob/main/CHANGELOG.md"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    "tests",
]


[tool.ruff]
select = [
    "A",    # Builtins
    "ANN",  # Annotations
    "ARG",  # Unused arguments
    "B",    # Bugbear
    "BLE",  # Blind except
    "C4",   # Comprehensions
    "C90",  # mccabe
    "COM",  # Commas
    "D1",   # Undocumented public elements
    "D2",   # Docstring conventions
    "D3",   # Triple double quotes
    "D4",   # Docstring text format
    "DTZ",  # Datetimes
    "EM",   # Error messages
    "ERA",  # Commented-out code
    "EXE",  # Executable
    "F",    # Pyflakes
    "FA",   # __future__ annotations
    "FLY",  # F-strings
    # "FURB", # Refurb
    "G",    # Logging format
    "I",    # Isort
    "ICN",  # Import conventions
    "INP",  # Disallow PEP-420 (Implicit namespace packages)
    "INT",  # gettext
    "ISC",  # Implicit str concat
    # "LOG",  # Logging
    "N",    # PEP-8 Naming
    "NPY",  # Numpy
    "PERF", # Unnecessary performance costs
    "PGH",  # Pygrep hooks
    "PIE",  # Unnecessary code
    "PL",   # Pylint
    "PT",   # Pytest
    "PTH",  # Use Pathlib
    "PYI",  # Stub files
    "Q",    # Quotes
    "RET",  # Return
    "RUF",  # Ruff
    "RSE",  # Raise
    "S",    # Bandit
    "SIM",  # Code simplification
    "SLF",  # Private member access
    "SLOT", # __slots__
    "T10",  # Debugger
    "T20",  # Print
    "TC",  # Type checking
    "TID",  # Tidy imports
    "TRY",  # Exception handling
    "UP",   # Pyupgrade
    "W",    # Warnings
    "YTT",  # sys.version
]
ignore = [
    "D203",    # One blank line before class docstring
    "D212",    # Multi-line summary first line
    "PLR0913", # Too many arguments
    "Q000",    # Single quotes found but double quotes preferred
]
ignore-init-module-imports = true
line-length = 120
# preview = true
show-fixes = true
src = ["src",]
target-version = "py39"


[tool.ruff.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"


[tool.ruff.mccabe]
max-complexity = 10


[tool.ruff.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405",]
"tests/*" = ["ANN", "ARG", "INP001", "S101",]
"**/ansi.py" = ["ANN401",]


[tool.ruff.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310, py311, py312, pypy3
isolated_build = True

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    pypy-3.10: pypy3

[testenv]
passenv = GITHUB_*
allowlist_externals = poetry

commands =
    poetry run pytest
    poetry run coverage report
"""
